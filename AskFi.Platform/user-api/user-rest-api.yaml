openapi: 3.0.0
info:
  title: User REST API
  version: 1.0.0

tags:
  - name: User Queries
    description: Endpoints related to user queries
  - name: User Visualizations
    description: Endpoints related to user visualizations
  - name: User Strategies
    description: Endpoints related to user strategies
  - name: Backtests
    description: Endpoints related to backtests
  - name: Simulations
    description: Endpoints related to simulations
  - name: Live Execution
    description: Endpoints related to live execution

paths:
  # User Queres
  /api/query/list:
    get:
      summary: List all user queries
      tags:
        - User Queries
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryListResponse'

  /api/query/{name}:
    post:
      summary: Create a new user query
      tags:
        - User Queries
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryPostRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryPostResponse'
        '422':
          description: Unprocessable Entity

    delete:
      summary: Delete a user query
      tags:
        - User Queries
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response

  # User Visualizations
  /api/visualization/list:
    get:
      tags:
        - User Visualizations
      summary: List all user visualizations
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisualizationListResponse'

  /api/visualization/{name}:
    post:
      tags:
        - User Visualizations
      summary: Create or update a visualization
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisualizationPostRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisualizationPostResponse'

    delete:
      tags:
        - User Visualizations
      summary: Delete a specific visualization
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful deletion

  /api/visualization/{name}/run:
    post:
      tags:
        - User Visualizations
      summary: Run a specific visualization
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisualizationRunRequest'
      responses:
        '200':
          description: Successful execution
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisualizationRunResponse'

  /api/visualization/{name}/run/list:
    get:
      tags:
        - User Visualizations
      summary: List all runs of a specific visualization
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisualizationRunListResponse'

  /api/visualization/{name}/run/{run-id}:
    get:
      tags:
        - User Visualizations
      summary: Retrieve details of a specific visualization run
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: run-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisualizationRunDetailResponse'

  # User Strategies
  /api/strategy/list:
    get:
      summary: List all user strategies
      tags:
        - User Strategies
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrategyListResponse'

  /api/strategy/{name}:
    post:
      summary: Create a new user strategy
      tags:
        - User Strategies
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StrategyPostRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrategyPostResponse'
        '422':
          description: Unprocessable Entity

    delete:
      summary: Delete a user strategy
      tags:
        - User Strategies
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
  # Backtests
  /api/backtest/list:
    get:
      summary: List all backtests
      tags:
        - Backtests
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BacktestListResponse'

  /api/backtest:
    post:
      summary: Create a new backtest
      tags:
        - Backtests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BacktestPostRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BacktestPostResponse'

  /api/backtest/{backtest-id}:
    get:
      summary: Retrieve details of a specific backtest
      tags:
        - Backtests
      parameters:
        - name: backtest-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BacktestDetailResponse'

    delete:
      summary: Delete a specific backtest
      tags:
        - Backtests
      parameters:
        - name: backtest-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response

  # Simulation
  /api/simulation/list:
    get:
      summary: List all simulations
      tags:
        - Simulations
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationListResponse'

  /api/simulation:
    post:
      summary: Create a new simulation
      tags:
        - Simulations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimulationPostRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationPostResponse'

  /api/simulation/{simulation-id}:
    get:
      summary: Retrieve details of a specific simulation
      tags:
        - Simulations
      parameters:
        - name: simulation-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationDetailResponse'

    delete:
      summary: Delete a specific simulation
      tags:
        - Simulations
      parameters:
        - name: simulation-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response

  # Live Execution
  /api/live/list:
    get:
      tags:
        - Live Execution
      summary: List all live execution sessions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveListResponse'

  /api/live/deploy:
    post:
      tags:
        - Live Execution
      summary: Deploy a strategy for live execution
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveDeployRequest'
      responses:
        '200':
          description: Successful deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveDeployResponse'

  /api/live/{session-id}:
    get:
      tags:
        - Live Execution
      summary: Retrieve details of a specific live execution session
      parameters:
        - name: session-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveSessionDetailResponse'

    delete:
      tags:
        - Live Execution
      summary: Terminate a specific live execution session
      parameters:
        - name: session-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful termination
  
components:
  schemas:
    # User Queries
    QueryListResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/QueryItem'
    QueryItem:
      type: object
      properties:
        name:
          type: string
        query-id:
          type: string
        parameter-scheme:
          $ref: '#/components/schemas/ParameterScheme'
        result-scheme:
          $ref: '#/components/schemas/ResultScheme'
    ParameterScheme:
      type: object
      properties:
        exchange:
          type: string
        instrument:
          type: string
    ResultScheme:
      type: object
      properties:
        high:
          type: number
        low:
          type: number
    QueryPostRequest:
      type: object
      properties:
        code:
          type: string
        type:
          type: string
        name:
          type: string
    QueryPostResponse:
      type: object
      properties:
        name:
          type: string
        query-id:
          type: string
        parameter-scheme:
          $ref: '#/components/schemas/ParameterScheme'
        result-scheme:
          $ref: '#/components/schemas/ResultScheme'

    # User Strategies
    StrategyListResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/StrategyItem'
    StrategyItem:
      type: object
      properties:
        name:
          type: string
        strategy-id:
          type: string
        parameter-scheme:
          $ref: '#/components/schemas/ParameterScheme'
        actions:
          type: array
          items:
            type: string
    StrategyPostRequest:
      type: object
      properties:
        code:
          type: string
        type:
          type: string
        name:
          type: string
    StrategyPostResponse:
      type: object
      properties:
        name:
          type: string
        strategy-id:
          type: string
        parameter-scheme:
          $ref: '#/components/schemas/ParameterScheme'
        actions:
          type: array
          items:
            type: string

    VisualizationListResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/VisualizationItem'
    VisualizationItem:
      type: object
      properties:
        name:
          type: string
        visualization-id:
          type: string
        parameter-scheme:
          $ref: '#/components/schemas/ParameterScheme'
    VisualizationPostRequest:
      type: object
      properties:
        code:
          type: string
        type:
          type: string
        name:
          type: string
    VisualizationPostResponse:
      type: object
      properties:
        name:
          type: string
        visualization-id:
          type: string
        parameter-scheme:
          $ref: '#/components/schemas/ParameterScheme'
    VisualizationRunRequest:
      type: object
      properties:
        query:
          type: string
        parameters:
          $ref: '#/components/schemas/ParameterScheme'
        at:
          type: string
          format: date-time
    VisualizationRunResponse:
      type: object
      properties:
        run-id:
          type: string
    VisualizationRunListResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/VisualizationRunItem'
    VisualizationRunItem:
      type: object
      properties:
        run-id:
          type: string
        timestamp:
          type: string
          format: date-time
    VisualizationRunDetailResponse:
      type: object
      properties:
        run-id:
          type: string
        timestamp:
          type: string
          format: date-time
        results:
          type: array
          items:
            type: object
            additionalProperties: true
  
    # Backtests
    BacktestListResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/BacktestItem'
    BacktestItem:
      type: object
      properties:
        name:
          type: string
        backtest-id:
          type: string
        parameters:
          $ref: '#/components/schemas/ParameterScheme'
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
    BacktestPostRequest:
      type: object
      properties:
        strategy:
          type: string
        parameters:
          $ref: '#/components/schemas/ParameterScheme'
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
    BacktestPostResponse:
      type: object
      properties:
        backtest-id:
          type: string
    BacktestDetailResponse:
      type: object
      properties:
        name:
          type: string
        backtest-id:
          type: string
        parameters:
          $ref: '#/components/schemas/ParameterScheme'
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
        results:
          type: array
          items:
            type: object

    # Simulations
    SimulationListResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/SimulationItem'
    SimulationItem:
      type: object
      properties:
        name:
          type: string
        simulation-id:
          type: string
        parameters:
          $ref: '#/components/schemas/ParameterScheme'
    SimulationPostRequest:
      type: object
      properties:
        strategy:
          type: string
        parameters:
          $ref: '#/components/schemas/ParameterScheme'
    SimulationPostResponse:
      type: object
      properties:
        simulation-id:
          type: string
    SimulationDetailResponse:
      type: object
      properties:
        name:
          type: string
        simulation-id:
          type: string
        parameters:
          $ref: '#/components/schemas/ParameterScheme'
        results:
          type: array
          items:
            type: object

    # Live Execution
    LiveListResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/LiveSessionItem'
    LiveSessionItem:
      type: object
      properties:
        name:
          type: string
        session-id:
          type: string
        strategy-id:
          type: string
        parameters:
          $ref: '#/components/schemas/ParameterScheme'
    LiveDeployRequest:
      type: object
      properties:
        strategy:
          type: string
        parameters:
          $ref: '#/components/schemas/ParameterScheme'
    LiveDeployResponse:
      type: object
      properties:
        session-id:
          type: string
    LiveSessionDetailResponse:
      type: object
      properties:
        name:
          type: string
        session-id:
          type: string
        strategy-id:
          type: string
        parameters:
          $ref: '#/components/schemas/ParameterScheme'
        results:
          type: array
          items:
            type: object
